{"version":3,"sources":["helpers/context.js","components/SetupForm.js","components/Loading.js","components/Modal.js","App.js","index.js"],"names":["table","general_knowledge","politics","history","animals","mythology","art","AppContext","React","createContext","AppProvider","children","useState","waiting","setWaiting","loading","setLoading","questions","setQuestions","index","setIndex","correct","setCorrect","error","setError","isModalOpen","setIsModalOpen","amount","category","difficulty","quiz","setQuiz","fetchQuestions","url","a","axios","catch","err","console","log","response","data","results","length","nextQuestion","oldIndex","openModal","Provider","value","checkAnswer","oldState","closeModal","handleChange","e","name","target","handleSubmit","preventDefault","useGlobalContext","useContext","SetupForm","className","htmlFor","id","onChange","type","onClick","Loading","Modal","finalScore","toFixed","App","question","correct_answer","incorrect_answers","answers","tempIndex","Math","floor","random","push","dangerouslySetInnerHTML","__html","map","answer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adc234e4.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useContext } from \"react\";\n\nconst table = {\n  general_knowledge: 9,\n  politics: 24,\n  history: 23,\n  animals: 27,\n  mythology: 20,\n  art: 25,\n};\n\nconst API_ENDPOINT = \"https://opentdb.com/api.php?\";\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  // State values\n  const [waiting, setWaiting] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [correct, setCorrect] = useState(0);\n  const [error, setError] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [quiz, setQuiz] = useState({\n    amount: 5,\n    category: \"general_knowledge\",\n    difficulty: \"easy\",\n  });\n\n  // Fetch questions function\n  const fetchQuestions = async (url) => {\n    setLoading(true);\n    setWaiting(false);\n    const response = await axios(url).catch((err) => console.log(err));\n    if (response) {\n      const data = response.data.results;\n      if (data.length > 0) {\n        setQuestions(data);\n        setLoading(false);\n        setWaiting(false);\n        setError(false);\n      } else {\n        setWaiting(true);\n        setError(true);\n      }\n    } else {\n      setWaiting(true);\n    }\n  };\n\n  // Next question function\n  const nextQuestion = () => {\n    setIndex((oldIndex) => {\n      const index = oldIndex + 1;\n      if (index > questions.length - 1) {\n        openModal();\n        return 0;\n      } else {\n        return index;\n      }\n    });\n  };\n\n  // Check if answer ic correct function\n  const checkAnswer = (value) => {\n    if (value) {\n      setCorrect((oldState) => oldState + 1);\n    }\n    nextQuestion();\n  };\n\n  // Open modal function\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  // Close modal function\n  const closeModal = () => {\n    setWaiting(true);\n    setCorrect(0);\n    setIsModalOpen(false);\n  };\n\n  // Form functions\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setQuiz({ ...quiz, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { amount, category, difficulty } = quiz;\n    const url = `${API_ENDPOINT}amount=${amount}&category=${table[category]}&difficulty=${difficulty}&type=multiple`;\n    fetchQuestions(url);\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        waiting,\n        loading,\n        questions,\n        index,\n        correct,\n        error,\n        isModalOpen,\n        nextQuestion,\n        checkAnswer,\n        closeModal,\n        quiz,\n        handleChange,\n        handleSubmit,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import React from \"react\";\nimport { useGlobalContext } from \"../helpers/context\";\n\nconst SetupForm = () => {\n  const { quiz, handleChange, handleSubmit, error } = useGlobalContext();\n  return (\n    <main>\n      <section className=\"quiz quiz-small\">\n        <form className=\"setup-form\">\n          <h2>Setup Quiz</h2>\n          {/* amount */}\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\">number of questions</label>\n            <select\n              name=\"amount\"\n              id=\"amount\"\n              className=\"form-input\"\n              value={quiz.amount}\n              onChange={handleChange}\n            >\n              <option value=\"5\">5</option>\n              <option value=\"10\">10</option>\n              <option value=\"15\">15</option>\n              <option value=\"20\">20</option>\n            </select>\n          </div>\n\n          {/* category */}\n          <div className=\"form-control\">\n            <label htmlFor=\"category\">category</label>\n            <select\n              name=\"category\"\n              id=\"category\"\n              className=\"form-input\"\n              value={quiz.category}\n              onChange={handleChange}\n            >\n              <option value=\"general_knowledge\">General Knowledge</option>\n              <option value=\"politics\">Politics</option>\n              <option value=\"history\">History</option>\n              <option value=\"animals\">Animals</option>\n              <option value=\"mythology\">Mythology</option>\n              <option value=\"art\">Art</option>\n            </select>\n          </div>\n\n          {/* difficulty */}\n          <div className=\"form-control\">\n            <label htmlFor=\"difficulty\">difficulty</label>\n            <select\n              name=\"difficulty\"\n              id=\"difficulty\"\n              className=\"form-input\"\n              value={quiz.difficulty}\n              onChange={handleChange}\n            >\n              <option value=\"easy\">easy</option>\n              <option value=\"medium\">medium</option>\n              <option value=\"hard\">hard</option>\n            </select>\n          </div>\n\n          {/* Error */}\n          {error && (\n            <p className=\"error\">\n              can't generate questions, please try different options\n            </p>\n          )}\n        </form>\n        <button type=\"submit\" onClick={handleSubmit} className=\"submit-btn\">\n          start\n        </button>\n      </section>\n    </main>\n  );\n};\n\nexport default SetupForm;\n","import React from \"react\";\n\nconst Loading = () => {\n  return (\n    <main>\n      <div className=\"loading\"></div>\n    </main>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\nimport { useGlobalContext } from \"../helpers/context\";\n\nconst Modal = () => {\n  const { isModalOpen, closeModal, correct, questions } = useGlobalContext();\n  const finalScore = ((correct / questions.length) * 100).toFixed(0);\n  return (\n    <div\n      className={`${\n        isModalOpen ? \"modal-container isOpen\" : \"modal-container\"\n      }`}\n    >\n      <div className=\"modal-content\">\n        <h2>Congrats!</h2>\n        <p>You answered {finalScore}% of questions correctly</p>\n        <button className=\"close-btn\" onClick={closeModal}>\n          Play Again\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport { useGlobalContext } from \"./helpers/context\";\n\nimport SetupForm from \"./components/SetupForm\";\nimport Loading from \"./components/Loading\";\nimport Modal from \"./components/Modal\";\n\nfunction App() {\n  const {\n    waiting,\n    loading,\n    questions,\n    index,\n    correct,\n    nextQuestion,\n    checkAnswer,\n  } = useGlobalContext();\n\n  if (waiting) {\n    return <SetupForm />;\n  }\n  if (loading) {\n    return <Loading />;\n  }\n  const { question, correct_answer, incorrect_answers } = questions[index];\n  // const answers = [...incorrect_answers, correct_answer];\n  let answers = [...incorrect_answers];\n  const tempIndex = Math.floor(Math.random() * 4);\n  if (tempIndex === 3) {\n    answers.push(correct_answer);\n  } else {\n    answers.push(answers[tempIndex]);\n    answers[tempIndex] = correct_answer;\n  }\n\n  return (\n    <main>\n      <Modal />\n      <section className=\"quiz\">\n        <p className=\"correct-answers\">\n          correct answers: {correct}/{index}\n        </p>\n        <article className=\"container\">\n          <h2 dangerouslySetInnerHTML={{ __html: question }} />\n          <div className=\"btn-container\">\n            {answers.map((answer, index) => {\n              return (\n                <button\n                  key={index}\n                  className=\"answer-btn\"\n                  onClick={() => {\n                    checkAnswer(correct_answer === answer);\n                  }}\n                  dangerouslySetInnerHTML={{ __html: answer }}\n                />\n              );\n            })}\n          </div>\n        </article>\n        <button className=\"next-question\" onClick={nextQuestion}>\n          skip question\n        </button>\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AppProvider } from \"./helpers/context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}